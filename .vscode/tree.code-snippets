{
    // Place your compro workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "tree_diameter": {
        "prefix": "tree_diameter",
        "body": [
            "struct edge{",
            "    int src, to, cost;",
            "};",
            "using Edges = vector<edge>;",
            "using WeightedGraph = vector<Edges>;",
            "using pi = pair<int, int>;",
            "",
            "pi dfs(WeightedGraph &G, int idx, int src){",
            "    pi res(0, idx);",
            "    for(auto &e : G[idx]) {",
            "        if(e.to == src) continue;",
            "        pi cost = dfs(G, e.to, idx);",
            "        cost.first += e.cost;",
            "        res = max(res, cost);",
            "    }",
            "    return res;",
            "}",
            "",
            "int tree_diameter(WeightedGraph &G)",
            "{",
            "    auto far = dfs(G, 0, -1);",
            "    auto res = dfs(G, far.second, -1);",
            "    return (res.first);",
            "}"
        ],
        "description": "tree_diameter"
    }
}